@charset "UTF-8";

$breakpoints: (
        's': 'only screen and ( max-width: 456px)',
        'm': 'only screen and ( max-width: 992px)',
        'l': 'only screen and ( max-width: 1200px)',
) !default;

@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);

  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}

.registerPage {
  .registerBox {
    text-align: right;
    @include respond-to(s) {
      text-align: left;
    }
    input {
      width: 300px;
      margin: 15px;
      margin-bottom: 5px;
    }
    input[name=problem] {
      width: 135px;
      height: 40px;
      text-align: center;
      font-weight: bolder;
      margin-right: 5px;
    }
    input[name=answer] {
      width: 65px;
      text-align: center;
    }
    button {
      margin: 10px 0px;
    }
    .ant-alert {
      text-align: center;
    }
  }
}