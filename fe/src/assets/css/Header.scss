@charset "UTF-8";

$breakpoints: (
        's': 'only screen and ( max-width: 768px)',
        'm': 'only screen and ( max-width: 992px)',
        'l': 'only screen and ( max-width: 1200px)',
) !default;

@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);

  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}


header {
  display: flex;
  justify-content: center;
  height: 60px;
  border-bottom: 1px solid white;
  box-shadow: 0px 2px 3px rgb(213, 213, 213);
  .headContent {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-basis: 80%;
    @keyframes logoRotate {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    }
    .headLeft {
      display: flex;
      align-items: center;
      img {
        width: 70px;
        height: 50px;
        animation: logoRotate infinite 10s linear;
      }
      .ant-input-search {
        width: 300px;
        @include respond-to(s) {
          display: none;
        }
      }
    }
    button {
      margin-left: 5px;
    }
    .userStatus {
      display: flex;
      flex-basis: 13%;
      align-items: center;
      span {
        margin-left: 20px;
      }
    }
  }
}

