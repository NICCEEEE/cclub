@charset "UTF-8";

$breakpoints: (
        's': 'only screen and ( max-width: 768px)',
        'm': 'only screen and ( max-width: 992px)',
        'l': 'only screen and ( max-width: 1200px)',
) !default;

@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);

  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}

.App {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  justify-content: space-between;
  .App-head {
    position: fixed;
    width: 100%;
    background-color: white;
    z-index: 2;
  }
  .content {
    margin-top: 100px;
    width: 80%;
    margin-left: 10%;
    @include respond-to(s) {
      width: 100%;
      margin-left: 10px;
      margin-right: 10px;
    }
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    .ant-breadcrumb {
      flex-basis: 100%;
      font-size: 20px;
      height: 30px;
      line-height: 30px;
    }
  }
}