{"version":3,"sources":["assets/images/logo.svg","components/Header.js","components/Footer.js","utilities.js","components/Home.js","components/Register.js","components/Login.js","routeConf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","input","Header","search","query","window","open","_this2","this","react_default","a","createElement","Link","to","src","require","alt","className","placeholder","onSearch","value","enterButton","es_button","type","React","Component","Footer","href","style","marginRight","marginLeft","success","words","message","config","top","duration","error","changeTitle","title","document","concat","debounce","fn","delay","timer","event","clearTimeout","setTimeout","bind","target","getCodeword","_this","axios","get","then","response","data","setState","problem","catch","console","log","changeCodeword","state","degree","Home","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","defaults","headers","post","Register","registerCheck","e","preventDefault","user","querySelector","pwd","confirm_pwd","email","codeword","warn","userState","background","pwdState","confirmState","emailState","answerState","assertThisInitialized","test","new_username","new_password","new_email","answer","cid","qs","stringify","history","push","change","name","breadcrumb","Item","action","method","icon","fontSize","required","size","onChange","disabled","react_motion","defaultStyle","spring","_ref","tooltip","placement","onClick","cursor","transform","block","htmlType","withCredentials","routes","path","component","exact","Login","loginCheck","username","password","loginSuccess","Redirect","paddingRight","App","BrowserRouter","components_Header","Switch","map","route","index","Route","key","render","assign","components_Footer","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1843f00e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport {Button, Input} from 'antd';\nimport '../assets/css/Header.css';\nimport {Link} from 'react-router-dom';\n\nconst Search = Input.Search;\n\nclass Header extends React.Component {\n    search = (query) => {\n        let url = 'https://www.baidu.com/s?ie=utf-8&f=3&rsv_bp=1&rsv_idx=1&ch=&tn=baidu&bar=&wd='\n        window.open(url + query)\n    }\n    render() {\n        return (\n            <header>\n                <Link to={'/'}>\n                    <img src={require('../assets/images/logo.svg')} alt={'logo'}/>\n                </Link>\n                <div className={'buttonGroup'}>\n                    <Search\n                        placeholder=\"百度一下，你就知道\"\n                        onSearch={value => this.search(value)}\n                        enterButton\n                    />\n                    <Link to={'/register'}>\n                        <Button type=\"primary\">注册</Button>\n                    </Link>\n                    <Link to={'/login'}>\n                        <Button>登录</Button>\n                    </Link>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header","import React from 'react'\nimport '../assets/css/Footer.css'\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <div className={'footerColor'}>\n                    <div className=\"color-1\"></div>\n                    <div className=\"color-2\"></div>\n                    <div className=\"color-3\"></div>\n                    <div className=\"color-4\"></div>\n                    <div className=\"color-5\"></div>\n                </div>\n                <div className={'copyright'}>\n                    <span>Idea comes from <a href={'https://community.nodebb.org/'}>NodeBB</a> and <a\n                        href={'https://community.nodebb-cn.org/'}>NodeBB.CN</a>.</span>\n                    <span style={{marginRight: '10px', marginLeft: '10px'}}>Powered by <a\n                        href={'https://www.vultr.com/'}>Vultr</a>.</span>\n                    <span> Copyright © 2018 <a href={'http://cwuc.cc'}>CWUC.CC</a>. All rights reserved.</span>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import {message} from 'antd';\nimport axios from 'axios'\n\n// 处理成功通知\nexport const success = (words) => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.success(words)\n};\n\n// 处理失败通知\nexport const error = (words) => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.error(words)\n};\n\n// 改变页面标题\nexport const changeTitle = (title) => {\n    document.title = `${title} | CCLUB`\n}\n\n// 函数节流\nexport const debounce = (fn, delay) => {\n    let timer\n    return function (event) {\n        clearTimeout(timer)\n        timer = setTimeout(fn.bind(this, event.target), delay)\n    }\n}\n\n// 生成验证码\nexport function getCodeword() {\n    axios.get('http://0.0.0.0:2000/api/codeword')\n        .then((response) => {\n            let data = response.data\n            this.setState({\n                problem: data\n            })\n        })\n        .catch((error) => {\n            console.log(error)\n        })\n}\n\n// 刷新验证码\nexport function changeCodeword() {\n    this.setState((state) => ({degree: state.degree === 0 ? 360 : state.degree + 360}))\n    getCodeword.bind(this)()\n}","import React from 'react'\nimport {changeTitle} from '../utilities'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n    componentWillMount() {\n        changeTitle('Home')\n    }\n    render() {\n        return (\n            <div className={'content homePage'}>\n                home\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport {Breadcrumb, Icon, Input, Button, Tooltip} from 'antd';\nimport {Link} from 'react-router-dom'\nimport '../assets/css/Register.css'\nimport axios from 'axios'\nimport qs from 'qs'\nimport {Motion, spring} from 'react-motion';\nimport {error, success, changeTitle, debounce, getCodeword, changeCodeword} from \"../utilities\"\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userState: null,\n            pwdState: null,\n            confirmState: null,\n            emailState: null,\n            answerState: null,\n            problem: {\n                problem: '',\n                cid: -1,\n            },\n            degree: 0,\n        }\n    }\n\n    registerCheck = (e) => {\n        e.preventDefault()\n        let user = document.querySelector(\"input[name='new_username']\")\n        let pwd = document.querySelector(\"input[name='new_password']\")\n        let confirm_pwd = document.querySelector(\"input[name='confirm_pwd']\")\n        let email = document.querySelector(\"input[name='new_email']\")\n        let codeword = document.querySelector(\"input[name='answer']\")\n        const validUser = /^[A-Za-z0-9]{6,12}$/\n        const validPwd = /^[A-Za-z0-9]{6,15}$/\n        const validEmail = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n        const validAnswer = /^[-]?[0-9]+$/\n        const warn = (words) => {\n            error(words)\n            user.value = ''\n            pwd.value = ''\n            confirm_pwd.value = ''\n            email.value = ''\n            codeword.value = ''\n            this.setState({\n                userState: {background: 'rgb(255, 238, 240)'},\n                pwdState: {background: 'rgb(255, 238, 240)'},\n                confirmState: {background: 'rgb(255, 238, 240)'},\n                emailState: {background: 'rgb(255, 238, 240)'},\n                answerState: {background: 'rgb(255, 238, 240)'},\n            })\n            getCodeword.bind(this)()\n        }\n        if (validUser.test(user.value)) {\n            if (validPwd.test(pwd.value)) {\n                if (confirm_pwd.value === pwd.value) {\n                    if (validEmail.test(email.value)) {\n                        if (validAnswer.test(codeword.value)) {\n                            let data = {\n                                new_username: user.value,\n                                new_password: pwd.value,\n                                confirm_pwd: confirm_pwd.value,\n                                new_email: email.value,\n                                answer: codeword.value,\n                                cid: this.state.problem.cid,\n                            }\n                            axios.post('http://0.0.0.0:2000/register', qs.stringify(data))\n                                .then((response) => {\n                                    if (response.data === 'True') {\n                                        success('注册成功！准备跳转。')\n                                        this.props.history.push('/login')\n                                    } else {\n                                        warn('注册失败，请重新尝试！')\n                                    }\n                                })\n                                .catch((error) => {\n                                    console.log(error);\n                                })\n                        } else {\n                            warn('注册失败，请重新尝试！')\n                        }\n                    } else {\n                        warn('注册失败，请重新尝试！')\n                    }\n                } else {\n                    warn('注册失败，请重新尝试！')\n                }\n            } else {\n                warn('注册失败，请重新尝试！')\n            }\n        } else {\n            warn('注册失败，请重新尝试！')\n        }\n    }\n    change = (target) => {\n        let name = target.name\n        let value = target.value\n        let pattern\n        switch (name) {\n            case 'new_username':\n                pattern = /^[A-Za-z0-9]{6,12}$/\n                if (pattern.test(value)) {\n                    axios.get(`http://0.0.0.0:2000/api/username/${value}`)\n                        .then((response) => {\n                            if (response.data === 'username exist') {\n                                error('用户名不合法或已存在，请重新输入')\n                                this.setState({\n                                    userState: {background: 'rgb(255, 238, 240)'}\n                                })\n                            } else {\n                                this.setState({\n                                    userState: {background: 'rgb(230, 255, 237)'}\n                                })\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        })\n                } else {\n                    this.setState({\n                        userState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n                break\n            case 'new_password':\n                pattern = /^[A-Za-z0-9]{6,15}$/\n                if (pattern.test(value)) {\n                    this.setState({\n                        pwdState: {background: 'rgb(230, 255, 237)'}\n                    })\n                } else {\n                    this.setState({\n                        pwdState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n                break\n            case 'confirm_pwd':\n                let pwd = document.querySelector(\"input[name='new_password']\")\n                if (value !== pwd.value) {\n                    this.setState({\n                        confirmState: {background: 'rgb(255, 238, 240)'}\n                    })\n                } else {\n                    this.setState({\n                        confirmState: {background: 'rgb(230, 255, 237)'}\n                    })\n                }\n                break\n            case 'answer':\n                pattern = /^[-]?[0-9]+$/\n                if (pattern.test(value)) {\n                    axios.get(`http://0.0.0.0:2000/api/codeword/solution?cid=${this.state.problem.cid}&answer=${value}`)\n                        .then((response) => {\n                            if (response.data === 'False') {\n                                this.setState({\n                                    answerState: {background: 'rgb(255, 238, 240)'}\n                                })\n                            } else {\n                                this.setState({\n                                    answerState: {background: 'rgb(230, 255, 237)'}\n                                })\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        })\n                } else {\n                    this.setState({\n                        answerState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n                break\n            default:\n                pattern = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n                if (pattern.test(value)) {\n                    axios.get(`http://0.0.0.0:2000/api/email/${value}`)\n                        .then((response) => {\n                            if (response.data === 'email exist') {\n                                error('邮箱不合法或已被注册，请重新输入')\n                                this.setState({\n                                    emailState: {background: 'rgb(255, 238, 240)'}\n                                })\n                            } else {\n                                this.setState({\n                                    emailState: {background: 'rgb(230, 255, 237)'}\n                                })\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        })\n                } else {\n                    this.setState({\n                        emailState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n        }\n    }\n\n    componentDidMount() {\n        changeTitle('注册新用户')\n        getCodeword.bind(this)()\n    }\n\n    render() {\n        return (\n            <div className={'content registerPage'}>\n                <Breadcrumb>\n                    <Breadcrumb.Item><Link to={'/'}>Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>注册</Breadcrumb.Item>\n                </Breadcrumb>\n                <form className={'registerBox'} action={'/register'} method={'post'}>\n                    <label><Icon type=\"user\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>用户名:</span>\n                        <Input required={true} size={'large'}\n                               name={'new_username'}\n                               placeholder=\"请输入用户名\"\n                               style={this.state.userState}\n                               onChange={debounce(this.change, 300).bind(this)}/><br/><span>用户名由数字或字母组成，长度6~12位。</span></label><br/>\n                    <label><Icon type=\"unlock\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>密码:</span>\n                        <Input required={true} size={'large'}\n                               type={'password'}\n                               name={'new_password'}\n                               style={this.state.pwdState}\n                               onChange={debounce(this.change, 300).bind(this)}\n                               placeholder=\"请输入密码\"/><br/><span>密码由数字或字母组成，长度6~15位。</span></label><br/>\n                    <label><Icon type=\"lock\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>再次确认:</span>\n                        <Input required={true} size={'large'}\n                               type={'password'}\n                               name={'confirm_pwd'}\n                               style={this.state.confirmState}\n                               onChange={debounce(this.change, 300).bind(this)}\n                               placeholder=\"请再次输入密码\"/><br/><span>请再次确认您输入的密码。</span></label><br/>\n                    <label><Icon type=\"mail\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>邮箱:</span>\n                        <Input required={true} size={'large'}\n                               name={'new_email'}\n                               onChange={debounce(this.change, 300).bind(this)}\n                               style={this.state.emailState}\n                               placeholder=\"请输入电子邮箱\"/><br/><span>请输入您的电子邮箱，我们将保证绝不公开！</span></label><br/>\n                    <label><Icon type=\"calculator\" style={{fontSize: '20px'}}/> <span\n                        style={{fontSize: '20px'}}>验证码:</span>\n                        <Input name={'problem'} disabled={true}\n                               placeholder={this.state.problem.problem.concat(\" = ?\")}/>\n                        <Motion defaultStyle={{degree: 0}} style={{degree: spring(this.state.degree)}}>\n                            {({degree}) => <Tooltip placement=\"bottom\" title={'点击换一题'}><Icon\n                                onClick={changeCodeword.bind(this)}\n                                style={{\n                                    fontSize: '20px',\n                                    cursor: 'pointer',\n                                    transform: `rotate(${degree}deg`\n                                }}\n                                type=\"reload\"/></Tooltip>}\n                        </Motion>\n                        <span style={{fontSize: '20px', marginLeft: '15px'}}>答案:</span><Input required={true}\n                                                                                              size={'large'}\n                                                                                              name={'answer'}\n                                                                                              onChange={debounce(this.change, 300).bind(this)}\n                                                                                              style={this.state.answerState}\n                                                                                              placeholder=\"答案\"/></label><br/>\n                    <Button onClick={this.registerCheck} block={true} htmlType={'submit'}\n                            type=\"primary\">注册</Button><br/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React from 'react'\nimport {Breadcrumb, Icon, Input, Button, Tooltip} from 'antd';\nimport {Link, Redirect} from 'react-router-dom'\nimport '../assets/css/Login.css'\nimport {error, success, changeTitle, getCodeword, changeCodeword} from \"../utilities\"\nimport {Motion, spring} from 'react-motion';\nimport axios from 'axios'\nimport qs from 'qs'\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.withCredentials  = true;\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            warn: false,\n            userState: null,\n            pwdState: null,\n            answerState: null,\n            problem: {\n                problem: '',\n                cid: -1,\n            },\n            degree: 0,\n        }\n    }\n\n    loginCheck = (e) => {\n        e.preventDefault()\n        let username = document.querySelector(\"input[name='username']\")\n        let password = document.querySelector(\"input[name='password']\")\n        let codeword = document.querySelector(\"input[name='answer']\")\n        const validUser = /^[A-Za-z0-9]{6,12}$/\n        const validPwd = /^[A-Za-z0-9]{6,15}$/\n        const validAnswer = /^[-]?[0-9]+$/\n        const warn = (words) => {\n            error(words)\n            username.value = ''\n            password.value = ''\n            codeword.value = ''\n            this.setState({\n                userState: {background: 'rgb(255, 238, 240)'},\n                pwdState: {background: 'rgb(255, 238, 240)'},\n                answerState: {background: 'rgb(255, 238, 240)'},\n            })\n            getCodeword.bind(this)()\n        }\n        if (validUser.test(username.value)) {\n            if (validPwd.test(password.value)) {\n                if (validAnswer.test(codeword.value)) {\n                    let data = {\n                        username: username.value,\n                        password: password.value,\n                        answer: codeword.value,\n                        cid: this.state.problem.cid,\n                    }\n                    axios.post('http://0.0.0.0:2000/login', qs.stringify(data))\n                        .then((response) => {\n                            if (response.data === 'False') {\n                                warn('登录失败，请确认您填写的信息后重新尝试！')\n                                success('登录成功，欢迎回来 :)')\n                                this.setState({\n                                    loginSuccess: true\n                                })\n                            } else {\n                                success('登录成功，欢迎回来 :)')\n                                console.log(response)\n                                axios.get('http://0.0.0.0:2000/login')\n                                    .then((response) => {\n                                        console.log('发起新请求的响应：', response)\n                                    })\n                                    .catch((error) => {\n                                        console.log(error)\n                                    })\n                                // this.setState({\n                                //     loginSuccess: true\n                                // })\n                            }\n                        })\n                        .catch((error) => {\n                            console.log(error)\n                        })\n                } else {\n                    warn('登录失败，请确认您填写的信息后重新尝试！')\n                }\n            } else {\n                warn('登录失败，请确认您填写的信息后重新尝试！')\n            }\n        } else {\n            warn('登录失败，请确认您填写的信息后重新尝试！')\n        }\n    }\n\n    componentDidMount() {\n        getCodeword.bind(this)()\n        changeTitle('正在登录')\n    }\n\n    render() {\n        if(this.state.loginSuccess){\n            return (<Redirect to=\"/\" />);\n        }\n        return (\n            <div className={'content loginPage'}>\n                <Breadcrumb>\n                    <Breadcrumb.Item><Link to={'/'}>Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>登录</Breadcrumb.Item>\n                </Breadcrumb>\n                <form className={'loginBox'}>\n                    <label><Icon type=\"user\" style={{fontSize: '20px'}}/> <span\n                        style={{fontSize: '20px'}}>用户名:</span><Input required={true} size={'large'}\n                                                                     style={this.state.userState}\n                                                                     name={'username'}\n                                                                     placeholder=\"请输入用户名\"/></label><br/>\n                    <label><Icon type=\"lock\" style={{fontSize: '20px'}}/> <span\n                        style={{fontSize: '20px'}}>密码:</span><Input required={true} size={'large'}\n                                                                    style={this.state.pwdState}\n                                                                    type={'password'} name={'password'}\n                                                                    placeholder=\"请输入密码\"/></label><br/>\n                    <label><Icon type=\"calculator\" style={{fontSize: '20px'}}/> <span\n                        style={{fontSize: '20px'}}>验证码:</span>\n                        <Input name={'problem'} disabled={true}\n                               placeholder={this.state.problem.problem.concat(\" = ?\")}/>\n                        <Motion defaultStyle={{degree: 0}} style={{degree: spring(this.state.degree)}}>\n                            {({degree}) => <Tooltip placement=\"bottom\" title={'点击换一题'}><Icon onClick={changeCodeword.bind(this)}\n                                                                                             style={{\n                                                                                                 fontSize: '20px',\n                                                                                                 cursor: 'pointer',\n                                                                                                 transform: `rotate(${degree}deg`\n                                                                                             }}\n                                                                                             type=\"reload\"/></Tooltip>}\n                        </Motion>\n                        <span style={{fontSize: '20px', marginLeft: '15px'}}>答案:</span><Input required={true}\n                                                                                              size={'large'}\n                                                                                              name={'answer'}\n                                                                                              style={this.state.answerState}\n                                                                                              placeholder=\"答案\"/></label><br/>\n                    <Button onClick={this.loginCheck} block={true} htmlType={'submit'} type=\"primary\">登录</Button><br/>\n                    <span style={{paddingRight: '32%'}}>没有账号？<Link to={'/register'}>前往注册！</Link></span>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login","import Home from \"./components/Home\"\nimport Register from \"./components/Register\"\nimport Login from \"./components/Login\"\n\nlet routes = [\n    {\n        path: \"/\",\n        component: Home,\n        exact: true\n    },\n    {\n        path: \"/login\",\n        component: Login\n    },\n    {\n        path: \"/register\",\n        component: Register\n    },\n]\n\nexport default routes","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./components/Header\"\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Footer from \"./components/Footer\"\nimport routes from './routeConf'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Header/>\n                    <Switch>\n                        {\n                            routes.map((route, index) => {\n                                if (route.exact === true) {\n                                    return <Route key={index} exact path={route.path}\n                                                  render={props => (\n                                                      <route.component {...props} routes={route.routes}/>\n                                                  )}/>\n                                } else {\n                                    return <Route key={index} path={route.path}\n                                                  render={props => (\n                                                      <route.component {...props} routes={route.routes}/>\n                                                  )}/>\n                                }\n                            })\n                        }\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}