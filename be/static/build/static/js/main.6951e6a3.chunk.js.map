{"version":3,"sources":["assets/images/logo.png","components/Header.js","components/Footer.js","components/Home.js","components/Register.js","components/Login.js","routeConf.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","input","Header","search","query","window","open","_this2","this","react_default","a","createElement","Link","to","src","require","alt","className","placeholder","onSearch","value","enterButton","es_button","type","React","Component","Footer","style","marginRight","href","marginLeft","Home","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","axios","defaults","headers","post","success","message","config","top","duration","error","Register","registerCheck","e","user","document","querySelector","pwd","confirm_pwd","email","test","preventDefault","data","new_username","new_password","new_email","qs","stringify","then","response","console","log","catch","setState","userState","background","pwdState","confirmState","emailState","debounce","fn","delay","timer","event","clearTimeout","setTimeout","bind","target","change","name","breadcrumb","Item","action","method","icon","fontSize","required","size","onChange","onClick","block","htmlType","routes","path","component","exact","Login","loginCheck","username","password","length","warn","App","BrowserRouter","components_Header","Switch","map","route","index","Route","key","render","assign","components_Footer","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6951e6a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4de5dd52.png\";","import React from 'react'\nimport {Button, Input} from 'antd';\nimport '../assets/css/Header.css';\nimport {Link} from 'react-router-dom';\n\nconst Search = Input.Search;\n\nclass Header extends React.Component {\n    search = (query) => {\n        let url = 'https://www.baidu.com/s?ie=utf-8&f=3&rsv_bp=1&rsv_idx=1&ch=&tn=baidu&bar=&wd='\n        window.open(url + query)\n    }\n    render() {\n        return (\n            <header>\n                <Link to={'/'}>\n                    <img src={require('../assets/images/logo.png')} alt={'logo'}/>\n                </Link>\n                <div className={'buttonGroup'}>\n                    <Search\n                        placeholder=\"百度一下，你就知道\"\n                        onSearch={value => this.search(value)}\n                        enterButton\n                    />\n                    <Link to={'/register'}>\n                        <Button type=\"primary\">注册</Button>\n                    </Link>\n                    <Link to={'/login'}>\n                        <Button>登录</Button>\n                    </Link>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header","import React from 'react'\nimport '../assets/css/Footer.css'\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer>\n                <div className={'footerColor'}>\n                    <div className=\"color-1\"></div>\n                    <div className=\"color-2\"></div>\n                    <div className=\"color-3\"></div>\n                    <div className=\"color-4\"></div>\n                    <div className=\"color-5\"></div>\n                </div>\n                <div className={'copyright'}>\n                    <span style={{marginRight: '10px'}}>Powered by <a href={'https://www.vultr.com/'}>Vultr</a>.</span>\n                    <span style={{marginLeft: '10px'}}> Copyright © 2018 Cclub For <a href={'http://cwuc.cc'}>CWUC.CC</a>. All rights reserved.</span>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React from 'react'\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {}\n    }\n\n    render() {\n        return (\n            <div className={'content homePage'}>\n                home\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react'\nimport {Breadcrumb, Icon, Input, Button, message} from 'antd';\nimport {Link} from 'react-router-dom'\nimport '../assets/css/Register.css'\nimport axios from 'axios'\nimport qs from 'qs'\n\n// Axios向后端提交数据容易接收不到原因是传参方式是request payload,参数格式是json，而并非用的是form传参，所以在后台用接收form数据的\n// 方式接收参数就接收不到了。post表单请求提交时，使用的Content-Type是application/x-www-form-urlencoded，而使用原生AJAX的POST请求如果不指\n// 定请求头RequestHeader，默认使用的Content-Type是text/plain;charset=UTF-8。\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nconst success = () => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.success('注册成功！准备跳转。');\n};\nconst error = () => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.error('注册失败，请重新尝试！');\n};\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userState: null,\n            pwdState: null,\n            confirmState: null,\n            emailState: null,\n        }\n    }\n\n    registerCheck = (e) => {\n        let user = document.querySelector(\"input[name='new_username']\")\n        let pwd = document.querySelector(\"input[name='new_password']\")\n        let confirm_pwd = document.querySelector(\"input[name='confirm_pwd']\")\n        let email = document.querySelector(\"input[name='new_email']\")\n        const validUser = /^[A-Za-z0-9]{6,12}$/\n        const validPwd = /^[A-Za-z0-9]{6,15}$/\n        const validEmail = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n        if (validUser.test(user.value)) {\n            if (validPwd.test(pwd.value)) {\n                if (confirm_pwd.value === pwd.value) {\n                    if (validEmail.test(email.value)) {\n                        e.preventDefault()\n                        let data = {\n                            new_username: user.value,\n                            new_password: pwd.value,\n                            confirm_pwd: confirm_pwd.value,\n                            new_email: email.value\n                        }\n                        axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n                        axios.post('/register', qs.stringify(data))\n                            .then((response) => {\n                                console.log(response);\n                                success()\n                            })\n                            .catch((error) => {\n                                console.log(error);\n                            })\n                    } else {\n                        e.preventDefault()\n                        error()\n                        user.value = ''\n                        pwd.value = ''\n                        confirm_pwd.value = ''\n                        email.value = ''\n                        this.setState({\n                            userState: {background: 'rgb(255, 238, 240)'},\n                            pwdState: {background: 'rgb(255, 238, 240)'},\n                            confirmState: {background: 'rgb(255, 238, 240)'},\n                            emailState: {background: 'rgb(255, 238, 240)'}\n                        })\n                    }\n                } else {\n                    e.preventDefault()\n                    error()\n                    user.value = ''\n                    pwd.value = ''\n                    confirm_pwd.value = ''\n                    email.value = ''\n                    this.setState({\n                        userState: {background: 'rgb(255, 238, 240)'},\n                        pwdState: {background: 'rgb(255, 238, 240)'},\n                        confirmState: {background: 'rgb(255, 238, 240)'},\n                        emailState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n            } else {\n                e.preventDefault()\n                error()\n                user.value = ''\n                pwd.value = ''\n                confirm_pwd.value = ''\n                email.value = ''\n                this.setState({\n                    userState: {background: 'rgb(255, 238, 240)'},\n                    pwdState: {background: 'rgb(255, 238, 240)'},\n                    confirmState: {background: 'rgb(255, 238, 240)'},\n                    emailState: {background: 'rgb(255, 238, 240)'}\n                })\n            }\n        } else {\n            e.preventDefault()\n            error()\n            user.value = ''\n            pwd.value = ''\n            confirm_pwd.value = ''\n            email.value = ''\n            this.setState({\n                userState: {background: 'rgb(255, 238, 240)'},\n                pwdState: {background: 'rgb(255, 238, 240)'},\n                confirmState: {background: 'rgb(255, 238, 240)'},\n                emailState: {background: 'rgb(255, 238, 240)'}\n            })\n        }\n    }\n    debounce = (fn, delay) => {\n        let timer\n        return function (event) {\n            clearTimeout(timer)\n            timer = setTimeout(fn.bind(this, event.target), delay)\n        }\n    }\n    change = (target) => {\n        let name = target.name\n        let value = target.value\n        let pattern\n        switch (name) {\n            case 'new_username':\n                pattern = /^[A-Za-z0-9]{6,12}$/\n                if (pattern.test(value)) {\n                    this.setState({\n                        userState: {background: 'rgb(230, 255, 237)'}\n                    })\n                } else {\n                    this.setState({\n                        userState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n                break\n            case 'new_password':\n                pattern = /^[A-Za-z0-9]{6,15}$/\n                if (pattern.test(value)) {\n                    this.setState({\n                        pwdState: {background: 'rgb(230, 255, 237)'}\n                    })\n                } else {\n                    this.setState({\n                        pwdState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n                break\n            case 'confirm_pwd':\n                let pwd = document.querySelector(\"input[name='new_password']\")\n                if (value !== pwd.value) {\n                    this.setState({\n                        confirmState: {background: 'rgb(255, 238, 240)'}\n                    })\n                } else {\n                    this.setState({\n                        confirmState: {background: 'rgb(230, 255, 237)'}\n                    })\n                }\n                break\n            default:\n                pattern = /^[A-Za-z\\d]+([-_.][A-Za-z\\d]+)*@([A-Za-z\\d]+[-.])+[A-Za-z\\d]{2,4}$/\n                if (pattern.test(value)) {\n                    this.setState({\n                        emailState: {background: 'rgb(230, 255, 237)'}\n                    })\n                } else {\n                    this.setState({\n                        emailState: {background: 'rgb(255, 238, 240)'}\n                    })\n                }\n        }\n    }\n\n    render() {\n        return (\n            <div className={'content registerPage'}>\n                <Breadcrumb>\n                    <Breadcrumb.Item><Link to={'/'}>Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>注册</Breadcrumb.Item>\n                </Breadcrumb>\n                <form className={'registerBox'} action={'/register'} method={'post'}>\n                    <label><Icon type=\"user\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>用户名:</span>\n                        <Input required={true} size={'large'}\n                               name={'new_username'}\n                               placeholder=\"请输入用户名\"\n                               style={this.state.userState}\n                               onChange={this.debounce(this.change, 300).bind(this)}/><br/><span>用户名由数字或字母组成，长度6~12位。</span></label><br/>\n                    <label><Icon type=\"unlock\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>密码:</span>\n                        <Input required={true} size={'large'}\n                               type={'password'}\n                               name={'new_password'}\n                               style={this.state.pwdState}\n                               onChange={this.debounce(this.change, 300).bind(this)}\n                               placeholder=\"请输入密码\"/><br/><span>密码由数字或字母组成，长度6~15位。</span></label><br/>\n                    <label><Icon type=\"lock\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>再次确认:</span>\n                        <Input required={true} size={'large'}\n                               type={'password'}\n                               name={'confirm_pwd'}\n                               style={this.state.confirmState}\n                               onChange={this.debounce(this.change, 300).bind(this)}\n                               placeholder=\"请再次输入密码\"/><br/><span>请再次确认您输入的密码。</span></label><br/>\n                    <label><Icon type=\"mail\" style={{fontSize: '20px'}}/> <span style={{fontSize: '20px'}}>邮箱:</span>\n                        <Input required={true} size={'large'}\n                               name={'new_email'}\n                               onChange={this.debounce(this.change, 300).bind(this)}\n                               style={this.state.emailState}\n                               placeholder=\"请输入电子邮箱\"/><br/><span>请输入您的电子邮箱，我们将保证绝不公开！</span></label><br/>\n                    <Button onClick={this.registerCheck} block={true} htmlType={'submit'}\n                            type=\"primary\">注册</Button><br/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register","import React from 'react'\nimport {Breadcrumb, Icon, Input, Button, message} from 'antd';\nimport {Link} from 'react-router-dom'\nimport '../assets/css/Login.css'\n\nconst success = () => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.success('成功登录！正在跳转。');\n};\nconst error = () => {\n    message.config({\n        top: '6%',\n        duration: 3,\n    })\n    message.error('登录失败，请检查您的用户名或密码后重新尝试！');\n};\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            warn: false\n        }\n    }\n\n    loginCheck = () => {\n        let username = document.querySelector(\"input[name='username']\")\n        let password = document.querySelector(\"input[name='password']\")\n        if (username.value.length === 0 || password.value.length === 0) {\n            error()\n        } else {\n            success()\n        }\n    }\n\n    render() {\n        return (\n            <div className={'content loginPage'}>\n                <Breadcrumb>\n                    <Breadcrumb.Item><Link to={'/'}>Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>登录</Breadcrumb.Item>\n                </Breadcrumb>\n                <form className={'loginBox'}>\n                    <label><Icon type=\"user\" style={{fontSize: '23px'}}/> <Input required={true} size={'large'}\n                                                                                 name={'username'}\n                                                                                 placeholder=\"请输入用户名\"/></label><br/>\n                    <label><Icon type=\"lock\" style={{fontSize: '23px'}}/> <Input required={true} size={'large'}\n                                                                                 type={'password'} name={'password'}\n                                                                                 placeholder=\"请输入密码\"/></label><br/>\n                    <Button onClick={this.loginCheck} block={true} htmlType={'submit'} type=\"primary\">登录</Button><br/>\n                    <span>没有账号？<Link to={'/register'}>前往注册！</Link></span>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login","import Home from \"./components/Home\"\nimport Register from \"./components/Register\"\nimport Login from \"./components/Login\"\n\nlet routes = [\n    {\n        path: \"/\",\n        component: Home,\n        exact: true\n    },\n    {\n        path: \"/login\",\n        component: Login\n    },\n    {\n        path: \"/register\",\n        component: Register\n    },\n]\n\nexport default routes","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./components/Header\"\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Footer from \"./components/Footer\"\nimport routes from './routeConf'\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Header/>\n                    <Switch>\n                        {\n                            routes.map((route, index) => {\n                                if (route.exact === true) {\n                                    return <Route key={index} exact path={route.path}\n                                                  render={props => (\n                                                      <route.component {...props} routes={route.routes}/>\n                                                  )}/>\n                                } else {\n                                    return <Route key={index} path={route.path}\n                                                  render={props => (\n                                                      <route.component {...props} routes={route.routes}/>\n                                                  )}/>\n                                }\n                            })\n                        }\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}